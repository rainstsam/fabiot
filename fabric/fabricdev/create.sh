#/bin/bash

# Usage:
#   peer channel create [flags]

# Flags:
#   -c, --channelID string     In case of a newChain command, the channel ID to create. It must be all lower case, less than 250 characters long and match the regular expression: [a-z][a-z0-9.-]*
#   -f, --file string          Configuration transaction file generated by a tool such as configtxgen for submitting to orderer
#   -h, --help                 help for create
#       --outputBlock string   The path to write the genesis block for the channel. (default ./<channelID>.block)
#   -t, --timeout duration     Channel creation timeout (default 10s)

# Global Flags:
#       --cafile string                       Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
#       --certfile string                     Path to file containing PEM-encoded X509 public key to use for mutual TLS communication with the orderer endpoint
#       --clientauth                          Use mutual TLS when communicating with the orderer endpoint
#       --connTimeout duration                Timeout for client to connect (default 3s)
#       --keyfile string                      Path to file containing PEM-encoded private key to use for mutual TLS communication with the orderer endpoint
#   -o, --orderer string                      Ordering service endpoint
#       --ordererTLSHostnameOverride string   The hostname override to use when validating the TLS connection to the orderer.
#       --tls                                 Use TLS when communicating with the orderer endpoint
 sudo docker exec \
  -e CORE_PEER_ID=peer0.work.sam.com \
  -e CORE_PEER_ADDRESS=peer0.work.sam.com:7051 \
  -e CORE_PEER_LOCALMSPID=WorkMSP \
  cli peer channel create \
    -o orderer.work.sam.com:7050 \
    -c samchannel \
    -f /etc/hyperledger/fabric/artifacts/samchannel.tx \
    --outputBlock /etc/hyperledger/fabric/artifacts/samchannel.block 
 
